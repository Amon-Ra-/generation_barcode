//===============================================
//******** Автор: 			Эмиль Карапетян
//*************************************
//******** Контакты:
//******** G+      				http://plus.google.com/+EmilKarapetyan 
//******** Инфостарт: 		http://infostart.ru/profile/317083/
//******** e-mail:				emil.vrn@gmail.com
//******** skype:				k_emil87
//*************************************
//===============================================

#Область СведенияОбОбработке
Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");
	ПараметрыРегистрации.Вставить("Наименование", "Генерация штрихкодов"); //Наименование обработки, которым будет заполнено наименование элемента справочника
	ПараметрыРегистрации.Вставить("Версия", "v_0.1.3_10122015");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация", "Генерация штрихкодов характеристики номенклатуры"); //Краткая информация по обработке, описание обработки
	ПараметрыРегистрации.Вставить("ВерсияБСП", "1.2.1.4");
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд,
          "Генерация штрихкода", //представление команды в пользовательском интерфейсе
          "ГенерацияШтрихода", //идентификатор команды; любая строка, уникальная в пределах данной обработки
          "ВызовСерверногоМетода");
		  
	ДобавитьКоманду(ТаблицаКоманд,
          "Ручная генерация ШК", //представление команды в пользовательском интерфейсе
          "ФормаРучнойГенерации", //идентификатор команды; любая строка, уникальная в пределах данной обработки
          ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы());
		  
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	Возврат ПараметрыРегистрации;
КонецФункции

Функция ПолучитьТаблицуКоманд()
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", 					Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор",					Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Использование",					Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение",	Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор",						Новый ОписаниеТипов("Строка"));
	Возврат Команды;
КонецФункции  

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование,  ПоказыватьОповещение = Ложь, Модификатор = "")
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление						= Представление;
	НоваяКоманда.Идентификатор					= Идентификатор;
	НоваяКоманда.Использование						= Использование;
	НоваяКоманда.ПоказыватьОповещение		= ПоказыватьОповещение;
	НоваяКоманда.Модификатор						= Модификатор;
КонецПроцедуры

Процедура ВыполнитьКоманду(ИдентификаторКоманды, ПараметрыВыполненияКоманды) Экспорт
	// Реализация логики команды
	Если ИдентификаторКоманды = "ГенерацияШтрихода" Тогда
		ГенерироватьСоздатьЗаписатьШтрихкоды();	
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти

Процедура ГенерироватьСоздатьЗаписатьШтрихкоды() Экспорт

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ШтрихкодыНоменклатуры.Характеристика КАК ХарактеристикаНоменклатуры,
	                      |	ШтрихкодыНоменклатуры.Штрихкод
	                      |ИЗ
	                      |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры");	
	тзХарактеристикиНоменклатурыШК = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ХарактеристикиНоменклатуры.Ссылка КАК ХарактеристикаНоменклатуры
	                      |ИЗ
	                      |	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	                      |ГДЕ
	                      |	ХарактеристикиНоменклатуры.ПометкаУдаления = ЛОЖЬ
	                      |	И НЕ ХарактеристикиНоменклатуры.Ссылка В (&тзХарактеристикиНоменклатурыШК)");
	Запрос.УстановитьПараметр("тзХарактеристикиНоменклатурыШК", тзХарактеристикиНоменклатурыШК);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ШтрихКод						= РегистрыСведений.ШтрихкодыНоменклатуры.СформироватьШтрихкодEAN13();
		АртикулНоменклатуры	= Выборка.ХарактеристикаНоменклатуры.Владелец.Артикул;
		МаксКолвоСимв				= Макс(СтрДлина(Штрихкод), СтрДлина(АртикулНоменклатуры));
		МинКолвоСимв				= Мин(СтрДлина(Штрихкод), СтрДлина(АртикулНоменклатуры));
		ШКАртикул						= Лев(АртикулНоменклатуры+"-"+Сред(ШтрихКод, СтрНайти(ШтрихКод, "0"), СтрДлина(АртикулНоменклатуры)+2),(МаксКолвоСимв + МинКолвоСимв) - (МаксКолвоСимв - МинКолвоСимв));
		
		Если Выборка.ХарактеристикаНоменклатуры.Ссылка.ДополнительныеРеквизиты.Количество()=1 И Выборка.ХарактеристикаНоменклатуры.Ссылка.ДополнительныеРеквизиты[0].Свойство.Заголовок ="Цвет" Тогда
			КодНоменклатуры	= Выборка.ХарактеристикаНоменклатуры.Владелец.КодДляПоиска;
			ШКНовый					= Лев(ШКАртикул, СтрДлина(ШКАртикул) - СтрДлина("-" + КодНоменклатуры)) + "-" + КодНоменклатуры;
			
		Иначе
			размер			= Выборка.ХарактеристикаНоменклатуры.Ссылка.ДополнительныеРеквизиты[1].Значение.Наименование;
			ШКНовый		= Лев(ШКАртикул, СтрДлина(ШКАртикул) - СтрДлина("-" + размер)) + "-" + размер;
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Штрихкод.Установить(ШКНовый);
		НаборЗаписей.Записать();
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Номенклатура		= Выборка.ХарактеристикаНоменклатуры.Владелец.Ссылка;
		НоваяЗапись.Характеристика	= Выборка.ХарактеристикаНоменклатуры;
		НоваяЗапись.Штрихкод				= ШКНовый; 
		НаборЗаписей.Записать();
		
	КонецЦикла; 
						  
КонецПроцедуры

Функция СформироватьШтрихкодEAN13(Артикул = Неопределено) Экспорт

	ПрефиксУзлаШтрихкода = ПрефиксУзлаШтрихкода(Артикул); //{keyu: Возвращает в качестве префикса артикул номенклатуры владельца
	
	Код = Неопределено;
	Диапазон = Неопределено;
	Диапазоны = ПолучитьМаксимальныеЗначенияКодовШтучныхШтрихкодов();
	Для Каждого СтрокаТЧ Из Диапазоны Цикл
		Код = СтрокаТЧ.Код + 1;
		Диапазон = СтрокаТЧ.Диапазон;
		Прервать;
	КонецЦикла;
	
	Если Код = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияНетСвободныхКодовШтучныхШтрихкодов());
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ПолучитьШтрихкодПоКоду(Код, Диапазон, ПрефиксУзлаШтрихкода);

КонецФункции

// Возвращает префикс штрихкода для текущего узла информационной базы
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Строка - Префикс узла штрихкода
//
Функция ПрефиксУзлаШтрихкода(Артикул = Неопределено) Экспорт
	
	//{keyu: произведена доработка где в качестве префикса возвращается артикул номенклатуры владельца, если параметр содержит значение
	АртикулВШтрихкод = Константы.keyu_АртикулПрефиксШтрихкода.Получить();
	Если Артикул = Неопределено Тогда
		//Возврат СтрЗаменить(СокрЛП(Артикул),"-","0");
		Возврат СокрЛП(Артикул)+"-";
	Иначе		
		Возврат Формат(Константы.ПрефиксШтрихкодовУзлаРИБ.Получить(),"ЧЦ=1; ЧН=; ЧВН=");
	КонецЕсли;
	
КонецФункции

// Функция возвращает массив максимальное значений кодов штучных штрихкодов
// по диапазонам
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Массив - Максимальные значения кодов по диапазонам
//
Функция ПолучитьМаксимальныеЗначенияКодовШтучныхШтрихкодов() Экспорт
	
	ДиапазоныШтучныхШтрихкодов = ЗначениеНастроекПовтИсп.ДиапазоныШтучныхШтрихкодов();
	
	Если ДиапазоныШтучныхШтрихкодов.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПрефиксУзла = Константы.ПрефиксШтрихкодовУзлаРИБ.Получить();
	
	ТекстЗапроса = "";
	Запросы = Новый Массив;
	Для Каждого СтрокаТЧ Из ДиапазоныШтучныхШтрихкодов Цикл
		Запросы.Добавить(
		"ВЫБРАТЬ
		|	""" + СтрокаТЧ.Диапазон + """ КАК Диапазон,
		|	МАКСИМУМ(ПОДСТРОКА(ШтрихкодыНоменклатуры.Штрихкод, 4, 9)) КАК КодСтрока
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|ГДЕ
		|	ШтрихкодыНоменклатуры.Штрихкод ПОДОБНО """ + СтрокаТЧ.Диапазон + Строка(ПрефиксУзла) + "__________""
		|");
	КонецЦикла;
	ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(Запросы, Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	ОписаниеТипаЧисла = ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15, 0);
	МаксимальныйКодШтучногоТовара = МаксимальныйКодШтучногоТовара();
	
	МаксимальныеЗначения = Новый Массив;
	Для Каждого СтрокаТЧ Из РезультатЗапроса Цикл
		
		Код = ОписаниеТипаЧисла.ПривестиЗначение(СтрокаТЧ.КодСтрока);
		Если Не Код < МаксимальныйКодШтучногоТовара Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаРезультата = Новый Структура;
		СтрокаРезультата.Вставить("Код", Код);
		СтрокаРезультата.Вставить("Диапазон", СтрокаТЧ.Диапазон);
		
		МаксимальныеЗначения.Добавить(СтрокаРезультата);
		
	КонецЦикла;
	
	Возврат МаксимальныеЗначения;

КонецФункции

// Функция возвращает штрихкод, создаваемый из кода с префиксами и контрольным символом
//
// Параметры:
//  Код                  - Число
//  Диапазон             - Строка
//  ПрефиксУзлаШтрихкода - Строка
//
// Возвращаемое значение:
//  Строка
//
Функция ПолучитьШтрихкодПоКоду(Код, Диапазон, ПрефиксУзлаШтрихкода) Экспорт
	
	//{keyu: если константа истина, тогда добавляется артикул в штрихкод	
	АртикулВШтрихкод = Константы.keyu_АртикулПрефиксШтрихкода.Получить();
	Если АртикулВШтрихкод Тогда
		//{keyu: проверяется сколько дополняться символов после префикса в штрих код, если максимально может быть 20 символов в штрихкоде
		КолвоСимв = 20 - СтрДлина(ПрефиксУзлаШтрихкода);
		СтрокаФормат = "ЧЦ="+КолвоСимв+"; ЧВН=; ЧГ=";
		Штрихкод = ПрефиксУзлаШтрихкода + Формат(Код, СтрокаФормат);
		Если СтрДлина(Штрихкод) > 20 Тогда
			Штрихкод = Лев(Штрихкод, 20);		
		КонецЕсли; 
		
	Иначе
		Штрихкод = Строка(Диапазон) + ПрефиксУзлаШтрихкода + Формат(Код, "ЧЦ=9; ЧВН=; ЧГ=");	
		Штрихкод = Штрихкод + КонтрольныйСимволEAN(ШтрихКод, 13);
	КонецЕсли; 

	Возврат Штрихкод;

КонецФункции

// Возвращает текст сообщения о недостатке свободных кодов штучных штрихкодов
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Строка - Текст сообщения
//
Функция ТекстСообщенияНетСвободныхКодовШтучныхШтрихкодов() Экспорт
	Возврат НСтр("ru = 'Нет свободных кодов в доступных диапазонах штучных штрихкодов.
		               |Штрихкод не сформирован.'")	
КонецФункции

// Функция возвращает максимальный код штучного товара
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Число
//
Функция МаксимальныйКодШтучногоТовара() Экспорт
	
	Возврат 999999999;
	
КонецФункции


// Функция вычисляет контрольный символ кода EAN
//
// Параметры:
//  Штрихкод     - штрихкод (без контрольной цифры)
//  Тип          - тип штрихкода: 13 - EAN13, 8 - EAN8
//
// Возвращаемое значение:
//  Контрольный символ штрихкода
//
Функция КонтрольныйСимволEAN(ШтрихКод, Тип) Экспорт

	Четн   = 0;
	Нечетн = 0;

	КоличествоИтераций = ?(Тип = 13, 6, 4);

	Для Индекс = 1 По КоличествоИтераций Цикл
		Если (Тип = 8) и (Индекс = КоличествоИтераций) Тогда
		Иначе
			Четн   = Четн   + Сред(ШтрихКод, 2 * Индекс, 1);
		КонецЕсли;
		Нечетн = Нечетн + Сред(ШтрихКод, 2 * Индекс - 1, 1);
	КонецЦикла;

	Если Тип = 13 Тогда
		Четн = Четн * 3;
	Иначе
		Нечетн = Нечетн * 3;
	КонецЕсли;

	КонтЦифра = 10 - (Четн + Нечетн) % 10;

	Возврат ?(КонтЦифра = 10, "0", Строка(КонтЦифра));

КонецФункции
