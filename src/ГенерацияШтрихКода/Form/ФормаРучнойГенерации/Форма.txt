&НаКлиенте
Процедура ГенерироватьШтрихкоды(Команда)
	ГенерироватьСоздатьЗаписатьШК();
КонецПроцедуры

&НаКлиенте
Процедура НайтиХарактеристикиИШК(Команда)
	ВыбратьХарактеристикиИШК()
КонецПроцедуры

&НаКлиенте
Процедура ИзМодуляОбъекта(Команда)
	ВызватьИзМодуляОбъект();
КонецПроцедуры

Процедура ВызватьИзМодуляОбъект()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");	
	ОбработкаОбъект.ГенерироватьСоздатьЗаписатьШтрихкоды();
	
КонецПроцедуры
 
Процедура ВыбратьХарактеристикиИШК()
	
	Если Объект.ПроверитьИСоздатьШКНаВсюНоменклатуру = Ложь Тогда
		ТекстЗапроса		= "ГДЕ
						     			 |	ХарактеристикиНоменклатуры.Владелец = &Владелец";
	Иначе
		ТекстЗапроса		="";
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ХарактеристикиНоменклатуры.Ссылка КАК ХарактеристикаНоменклатуры,
	                      |	ВЫРАЗИТЬ(ХарактеристикиНоменклатуры.Владелец КАК Справочник.Номенклатура).Ссылка КАК Номенклатура,
	                      |	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК Штрихкод,
	                      |	ВЫБОР
	                      |		КОГДА ШтрихкодыНоменклатуры.Штрихкод ЕСТЬ NULL 
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ КАК Выбрать
	                      |ИЗ
	                      |	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	                      |		ПО (ШтрихкодыНоменклатуры.Характеристика = ХарактеристикиНоменклатуры.Ссылка)
						  | "+ ТекстЗапроса);
						  
	Запрос.УстановитьПараметр("Владелец", Объект.Номенклатура);	
	тзРезультат = Запрос.Выполнить().Выгрузить();
	
	Если тзРезультат.Количество() > 0 Тогда
		Объект.ХарактеристикиНоменклатуры.Загрузить(тзРезультат);
	КонецЕсли;

КонецПроцедуры

Процедура ГенерироватьСоздатьЗаписатьШК()
	
	Для каждого строка Из Объект.ХарактеристикиНоменклатуры Цикл
		
		Если строка.Выбрать Тогда		
			
			АртикулНоменклатуры	= строка.ХарактеристикаНоменклатуры.Владелец.Артикул;
			ШтрихКод						= СформироватьШтрихкодEAN13Локальная(АртикулНоменклатуры);
			МаксКолвоСимв				= Макс(СтрДлина(Штрихкод), СтрДлина(АртикулНоменклатуры));
			МинКолвоСимв				= Мин(СтрДлина(Штрихкод), СтрДлина(АртикулНоменклатуры));
			ШКАртикул						= Лев(АртикулНоменклатуры+"-"+Сред(ШтрихКод, СтрНайти(ШтрихКод, "0"), СтрДлина(АртикулНоменклатуры)+2),(МаксКолвоСимв + МинКолвоСимв) - (МаксКолвоСимв - МинКолвоСимв));
			
			Если строка.ХарактеристикаНоменклатуры.Ссылка.ДополнительныеРеквизиты.Количество()=1 И строка.ХарактеристикаНоменклатуры.Ссылка.ДополнительныеРеквизиты[0].Свойство.Заголовок ="Цвет" Тогда
				КодНоменклатуры	= строка.ХарактеристикаНоменклатуры.Владелец.КодДляПоиска;
				ШКНовый					= Лев(ШКАртикул, СтрДлина(ШКАртикул) - СтрДлина("-" + КодНоменклатуры)) + "-" + КодНоменклатуры;
				
			Иначе
				размер			= строка.ХарактеристикаНоменклатуры.Ссылка.ДополнительныеРеквизиты[1].Значение.Наименование;
				ШКНовый		= Лев(ШКАртикул, СтрДлина(ШКАртикул) - СтрДлина("-" + размер)) + "-" + размер;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(строка.Штрихкод) Тогда
				НаборЗаписей = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Штрихкод.Установить(строка.Штрихкод);
				НаборЗаписей.Записать();	
				НаборЗаписей.Очистить();
			КонецЕсли;
			
			НаборЗаписей = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Штрихкод.Установить(ШКНовый);
			НаборЗаписей.Записать();	
			
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Номенклатура		=  строка.ХарактеристикаНоменклатуры.Владелец.Ссылка;
			НоваяЗапись.Характеристика	=  строка.ХарактеристикаНоменклатуры;
			НоваяЗапись.Штрихкод				= ШКНовый; 
			НаборЗаписей.Записать();
			
		КонецЕсли;
		
	КонецЦикла; 
	
	ВыбратьХарактеристикиИШК();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьИСоздатьШКНаВсюНоменклатуруПриИзменении(Элемент)
	
	Если Объект.ПроверитьИСоздатьШКНаВсюНоменклатуру Тогда
		Объект.Номенклатура = ВернутьПустуюСсылку();
		Элементы.Номенклатура.Доступность = Ложь;	
		Элементы.ХарактеристикиНоменклатурыНоменклатура.Видимость = Истина;
		
		Если Объект.ХарактеристикиНоменклатуры.Количество() > 0 Тогда
			Объект.ХарактеристикиНоменклатуры.Очистить();					
		КонецЕсли; 
		
	Иначе
		Элементы.Номенклатура.Доступность = Истина;
		Объект.ХарактеристикиНоменклатуры.Очистить();
		Элементы.ХарактеристикиНоменклатурыНоменклатура.Видимость = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

 Функция ВернутьПустуюСсылку()
 
 Возврат Справочники.Номенклатура.ПустаяСсылка();	
 
 КонецФункции // ВернутьПустуюСсылку()

 &НаКлиенте
 Процедура Да(Команда)
	 УстановитьЗначениеИстинаВыбрать()	
 КонецПроцедуры

Процедура УстановитьЗначениеИстинаВыбрать()

	тзХарактеристики = Новый ТаблицаЗначений;
		
	тзХарактеристики = Объект.ХарактеристикиНоменклатуры.Выгрузить();
	тзХарактеристики.ЗаполнитьЗначения(Истина, "Выбрать");

	Объект.ХарактеристикиНоменклатуры.Загрузить(тзХарактеристики);
	
КонецПроцедуры

&НаКлиенте
Процедура Нет(Команда)
	УстановитьЗначениеЛожьВыбрать()
КонецПроцедуры

Процедура УстановитьЗначениеЛожьВыбрать()

	тзХарактеристики = Новый ТаблицаЗначений;
		
	тзХарактеристики = Объект.ХарактеристикиНоменклатуры.Выгрузить();
	тзХарактеристики.ЗаполнитьЗначения(Ложь, "Выбрать");

	Объект.ХарактеристикиНоменклатуры.Загрузить(тзХарактеристики);
	
КонецПроцедуры

Функция 	СформироватьШтрихкодEAN13Локальная(Артикул)
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");	
	Возврат ОбработкаОбъект.СформироватьШтрихкодEAN13(Артикул);
КонецФункции;



  